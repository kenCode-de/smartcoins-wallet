package de.bitsharesmunich.cryptocoincore.base.seed;

import de.bitsharesmunich.cryptocoincore.base.AccountSeed;
import de.bitsharesmunich.cryptocoincore.base.SeedType;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.List;

/**
 * The brainkey seed type, used in the Bitshares Openledger
 */

public class Brainkey extends AccountSeed {

    /**
     * Constructor without database with the words pregenerated
     * @param words The words to be used separated with space
     * @param sequence the sequence of this brainkey
     */
    public Brainkey(String words, int sequence) {
        this.mId = -1;
        this.mType = SeedType.BRAINKEY;
        this.mMnemonicCode = Arrays.asList(words.split(" "));
        this.mAdditional = Integer.toString(sequence);
    }

    /**
     * Constructor from database
     * @param id The id on the database
     * @param mnemonicCode the list of each mnemonic word
     * @param additional The sequence
     */
    public Brainkey(long id, List<String> mnemonicCode, String additional) {
        this.mId = id;
        this.mType = SeedType.BRAINKEY;
        this.mMnemonicCode = mnemonicCode;
        this.mAdditional = additional;
    }

    /**
     * Gets the seed to be used to generate keys
     * @return The ssed generated by this brainkey
     */
    @Override
    public byte[] getSeed() {
        StringBuilder encoded = new StringBuilder();
        for (String word : this.getMnemonicCode()) {
            encoded.append(word);
            encoded.append(" ");
        }
        encoded.append(this.getAdditional());
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-512");
            byte[] bytes = md.digest(encoded.toString().getBytes("UTF-8"));
            MessageDigest sha256 = MessageDigest.getInstance("SHA-256");
            return sha256.digest(bytes);
        } catch (NoSuchAlgorithmException e) {
            //TODO handler this exception
            System.out.println("NoSuchAlgotithmException. Msg: " + e.getMessage());
        } catch (UnsupportedEncodingException e) {
            //TODO handler this exception
            System.out.println("UnsupportedEncodingException. Msg: " + e.getMessage());
        }
        return null;
    }
}
